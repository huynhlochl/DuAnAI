# -*- coding: utf-8 -*-
"""dudoanbenhtieuduong.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XRw2naT4t7uxJ8EUMEmIEdd9F1yfJTwE
"""

#khai báo các thư viện cần thiết cho mô hình
import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

# tải bộ dữ liệu bệnh tiểu đường
diabetes_dataset = pd.read_csv('/content/diabetes.csv')

# in ra 5 hàng đầu của tập dữ liệu
diabetes_dataset.head()

# số hàng và cột trong tập dữ liệu này
diabetes_dataset.shape

# nhận các biện pháp thống kê của dữ liệu
diabetes_dataset.describe()
diabetes_dataset['Outcome'].value_counts()
diabetes_dataset.groupby('Outcome').mean()
# tách dữ liệu và nhãn
X = diabetes_dataset.drop(columns = 'Outcome', axis=1)
Y = diabetes_dataset['Outcome']
print(X)
print(Y)

# tiền xử lý dữ liệu
scaler = StandardScaler()
scaler.fit(X)
standardized_data = scaler.transform(X)
print(standardized_data)
X = standardized_data
Y = diabetes_dataset['Outcome']
print(X)
print(Y)
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)
print(X.shape, X_train.shape, X_test.shape)

#support vector machine
classifier = svm.SVC(kernel='linear')
#đào tạo bộ phân loại máy vector hỗ trợ
classifier.fit(X_train, Y_train)
# điểm chính xác trên dữ liệu huấn luyện
X_train_prediction = classifier.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)
print('Accuracy score of the training data : ', training_data_accuracy)
# điểm chính xác trên dữ liệu thử nghiệm
X_test_prediction = classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)
print('Accuracy score of the test data : ', test_data_accuracy)
input_data = (5,166,72,19,175,25.8,0.587,51)

# thay đổi input_data thành mảng numpy
input_data_as_numpy_array = np.asarray(input_data)

# định hình lại mảng như chúng ta đang dự đoán cho một trường hợp
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

# chuẩn hóa dữ liệu đầu vào
std_data = scaler.transform(input_data_reshaped)
print(std_data)

prediction = classifier.predict(std_data)
print(prediction)

if (prediction[0] == 0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')